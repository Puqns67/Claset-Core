name: Build

on:
  push:
    branches: 
      - master
  workflow_dispatch:
    inputs:
      use_nuitka_develop_version:
        description: 'use Nuitka develop version / 使用Nuitka 开发版编译.'
        required: true
        default: 'false'

env:
  UPLOAD_TO_ACTIONS: ${{ true }}
  PYTHON_VERSION: ${{ '3.10.1' }}
  PYTHON_ARCHITECTURE: ${{ 'x64' }}
  RELEASES_NAME_PERFIX: ${{ 'Claset-Build' }}
  CACHE_NUITKA_GCC: ${{ true }}
  CACHE_PYPI: ${{ true }}
  CACHE_BUILD: ${{ false }}
  RETENTION_DAYS: ${{ 16 }}
  DEFAULT_MODULE_NAME: ${{ 'Tests' }}

jobs:
  Build_Windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2


      - name: Generate Times
        id: genReleaseTimes
        run: |
          echo "::set-output name=tag::$(date +'%Y/%m/%d_%H/%M/%S')"
          echo "::set-output name=filename::$(date +'%Y-%m-%d_%H-%M-%S')"


      - name: Generate release name
        id: genFileName
        run: |
          echo "::set-output name=filename::${{ env.RELEASES_NAME_PERFIX }}-${{ runner.os }}-${{ env.PYTHON_ARCHITECTURE }}-${{ steps.genReleaseTimes.outputs.filename }}.exe"


      - name: PyPI Cache
        if: ${{ env.CACHE_PYPI }}
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-cache-python-pip-${{ hashFiles('**/requirements_build.txt') }}
          restore-keys: ${{ runner.os }}-cache-python-pip-


      - name: Nuitka Cache
        if: ${{ env.CACHE_NUITKA_GCC }}
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\Nuitka\Nuitka
          key: ${{ runner.os }}-cache-nuitka
          restore-keys: ${{ runner.os }}-cache-nuitka


      - name: Build Cache
        if: ${{ env.CACHE_BUILD }}
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}\Claset_Test.build
            ${{ github.workspace }}\Claset_Test.dist
            ${{ github.workspace }}\Claset_Test.onefile-build
          key: ${{ runner.os }}-cache-nuitka-build-${{ steps.genFileName.outputs.tag }}
          restore-keys: ${{ runner.os }}-cache-nuitka-build-


      - name: Setting Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.PYTHON_ARCHITECTURE }}


      - name: Setting PyPI Environment
        shell: pwsh
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r requirements_build.txt


      - name: Using Develop Version Nuitka
        if: github.event.inputs.use_nuitka_develop_version  == 'true'
        shell: pwsh
        run: pip install -U "https://github.com/Nuitka/Nuitka/archive/develop.zip"


      - name: Copy start file
        shell: pwsh
        run: Move-Item ${{ github.workspace }}\Claset\Execution\${{ env.DEFAULT_MODULE_NAME }}\Run.py ${{ github.workspace }}\


      - name: Show Environment
        shell: pwsh
        run: |
          python -c "from sys import version; print('Python', version)"
          Write-Output "PyPI packages list - All"
          Write-Output "==========================="
          pip list
          Write-Output "==========================="
          Write-Output ""
          Write-Output "PyPI packages list - Outdate"
          Write-Output "==========================="
          pip list --outdate
          Write-Output "==========================="


      - name: Build
        shell: pwsh
        run: python -m nuitka --standalone --onefile --assume-yes-for-downloads -o "${{ github.workspace }}\${{ steps.genFileName.outputs.filename }}" "${{ github.workspace }}\Run.py"


      - name: Upload Build Artifact to Actions
        if: ${{ env.UPLOAD_TO_ACTIONS }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.genFileName.outputs.filename }}
          path: ${{ github.workspace }}\${{ steps.genFileName.outputs.filename }}
          retention-days: ${{ env.RETENTION_DAYS }}



  Build_Ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2


      - name: Generate Times
        id: genReleaseTimes
        run: |
          echo "::set-output name=tag::$(date +'%Y/%m/%d_%H/%M/%S')"
          echo "::set-output name=filename::$(date +'%Y-%m-%d_%H-%M-%S')"


      - name: Generate release name
        id: genFileName
        run: |
          echo "::set-output name=filename::${{ env.RELEASES_NAME_PERFIX }}-${{ runner.os }}-${{ env.PYTHON_ARCHITECTURE }}-${{ steps.genReleaseTimes.outputs.filename }}"


      - name: PyPI Cache
        if: ${{ env.CACHE_PYPI }}
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-cache-python-pip-${{ hashFiles('**/requirements_build.txt') }}
          restore-keys: ${{ runner.os }}-cache-python-pip-


      - name: Build Cache
        if: ${{ env.CACHE_BUILD }}
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/Claset_Test.build
            ${{ github.workspace }}/Claset_Test.dist
            ${{ github.workspace }}/Claset_Test.onefile-build
          key: ${{ runner.os }}-cache-nuitka-build-${{ steps.genFileName.outputs.tag }}
          restore-keys: ${{ runner.os }}-cache-nuitka-build-


      - name: Setting Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.PYTHON_ARCHITECTURE }}


      - name: Setting PyPI Environment
        shell: pwsh
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r requirements_build.txt


      - name: Using Develop Version Nuitka
        if: github.event.inputs.use_nuitka_develop_version  == 'true'
        shell: pwsh
        run: pip install -U "https://github.com/Nuitka/Nuitka/archive/develop.zip"


      - name: Copy start file
        shell: pwsh
        run: Move-Item ${{ github.workspace }}/Claset/Execution/${{ env.DEFAULT_MODULE_NAME }}/Run.py ${{ github.workspace }}/


      - name: Show Environment
        shell: pwsh
        run: |
          python -c "from sys import version; print('Python', version)"
          Write-Output "PyPI packages list - All"
          Write-Output "==========================="
          pip list
          Write-Output "==========================="
          Write-Output ""
          Write-Output "PyPI packages list - Outdate"
          Write-Output "==========================="
          pip list --outdate
          Write-Output "==========================="


      - name: Build
        shell: pwsh
        run: python -m nuitka --standalone --onefile --assume-yes-for-downloads -o "${{ github.workspace }}/${{ steps.genFileName.outputs.filename }}" "${{ github.workspace }}/Run.py"


      - name: Upload Build Artifact to Actions
        if: ${{ env.UPLOAD_TO_ACTIONS }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.genFileName.outputs.filename }}
          path: ${{ github.workspace }}/${{ steps.genFileName.outputs.filename }}
          retention-days: ${{ env.RETENTION_DAYS }}

